import type { Metadata } from 'next';
import { Roboto } from 'next/font/google';
import { getServerSession } from 'next-auth/next';
import React from 'react';

import { authOptions } from '|/lib/auth';
import { cn } from '|/lib/utils';

import { Providers } from './providers';

import './globals.css';
import '@radix-ui/themes/styles.css';

const roboto = Roboto({
  weight: ['400', '700'],
  style: ['normal', 'italic'],
  subsets: ['latin'],
  display: 'swap',
  variable: '--roboto',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

type RootLayoutProps = Readonly<{
  children: React.ReactNode;
}>;

export default async function RootLayout({ children }: RootLayoutProps) {
  const session = await getServerSession(authOptions);

  return (
    <html suppressHydrationWarning lang="en">
      <body
        suppressHydrationWarning
        // className={`${roboto.className} text-white bg-gradient-to-b from-transparent to-black bg-black`}
        className={cn('min-h-screen bg-background font-sans antialiased', roboto.variable)}
      >
        <Providers session={session}>{children}</Providers>
      </body>
    </html>
  );
}
